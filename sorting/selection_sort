// SELECTION SORT

Simple and easy to understand.
Works well with small datasets.
Selection sort has a time complexity of O(n^2) in the worst and average case.
Does not work well on large datasets.
Does not preserve the relative order of items with equal keys which means it is not stable.
If the array is already sorted, the time complexity of selection sort remains the same as its worst-case time complexity. 
Selection sort always performs comparisions and swaps for each pair of elements, regardless of whether the array is sorted or not O(N^2).

 void selectionSort(int arr[], int n)
    {
       //code here
       for(int i=0;i<n-1;i++)
       {
           int mn_ind=i;
           for(int j=i+1;j<n;j++){
               if(arr[j]<arr[mn_ind]){
                   mn_ind=j;
               }
           }
           if(mn_ind != i)
            swap(arr[i],arr[mn_ind]);
       }
       
    }
